name: React Build & Deploy to S3 and EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # CHANGED: prefer ci when lockfile exists (more reliable), else install
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload dist to S3
        run: aws s3 sync dist/ s3://my-react-deploy-bucket/frontend --delete

      - name: Upload server files to S3
        run: aws s3 sync . s3://my-react-deploy-bucket/server --exclude "dist/*" --exclude "node_modules/*" --exclude ".git/*" --delete

      - name: Trigger EC2 update via SSM
        run: |
          set -e  # CHANGED: fail fast if the SSM call itself fails
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "set -e",  # CHANGED: fail fast on the instance too

              # stop any running server (accept both patterns)
              "pkill -f unified-server.js || pkill -f unified-server || true",

              # go to app folder
              "cd /home/brewpost/brewpost",

              # sync server sources (no dist, no node_modules)
              "aws s3 sync s3://my-react-deploy-bucket/server /home/brewpost/brewpost --exclude dist/* --exclude node_modules/* --delete",

              # CHANGED: install production deps (prefer ci when lockfile exists)
              "if [ -f package-lock.json ]; then NODE_ENV=production npm ci --omit=dev; else NODE_ENV=production npm install --omit=dev; fi",

              # pull .env from Secrets Manager
              "aws secretsmanager get-secret-value --secret-id env --query SecretString --output text > .env",

              # refresh built frontend
              "rm -rf /home/brewpost/brewpost/dist/*",
              "aws s3 sync s3://my-react-deploy-bucket/frontend /home/brewpost/brewpost/dist --delete",

              # start server in background
              "PORT=8080 nohup node unified-server.js > server.log 2>&1 &",

              # keep your chown but make it non-fatal
              "sudo chown -R ubuntu:ubuntu /home/brewpost/brewpost/ || true",

              # reload nginx if present
              "sudo systemctl reload nginx || true"
            ]' \
            --region ${{ secrets.AWS_REGION }} \
            --query 'Command.CommandId' \
            --output text)
          
          echo "Command ID: $COMMAND_ID"
          echo "Waiting for command to complete..."
          
          aws ssm wait command-executed \
            --command-id "$COMMAND_ID" \
            --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
            --region ${{ secrets.AWS_REGION }}

          echo "---- SSM Output (first plugin) ----"
          aws ssm list-command-invocations \
            --command-id "$COMMAND_ID" \
            --details \
            --region "${{ secrets.AWS_REGION }}" \
            --query "CommandInvocations[0].CommandPlugins[0].{Name:Name,Status:Status,Output:Output}" \
            --output table
          
          echo "Command completed successfully!"
