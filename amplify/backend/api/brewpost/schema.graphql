# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Node @model @auth(rules: [{ allow: public }]) {
  id: ID!
  projectId: String!
  nodeId: String!
  title: String!
  description: String
  x: Float
  y: Float
  status: String
  contentId: String
  type: String
  day: String
  imageUrl: String
  imagePrompt: String
  scheduledDate: AWSDateTime
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Edge @model @auth(rules: [{ allow: public }]) {
  id: ID!
  projectId: String!
  edgeId: String!
  from: String!
  to: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Mutation {
  createScheduleWithEventBridge(input: ScheduleEventBridgeInput!): ScheduleEventBridgeResponse
    @function(name: "scheduleDispatcher")
}

type ScheduleEventBridgeResponse {
  ok: Boolean!
  scheduled: [ScheduledItem]
}

type ScheduledItem {
  scheduleId: String!
  status: String!
  scheduledDate: AWSDateTime
}

input ScheduleEventBridgeInput {
  nodes: [ScheduleNodeInput!]!
}

input ScheduleNodeInput {
  id: ID!
  projectId: String
  nodeId: String
  title: String
  description: String
  x: Float
  y: Float
  status: String
  contentId: String
  type: String
  day: String
  imageUrl: String
  imagePrompt: String
  scheduledDate: AWSDateTime
}
